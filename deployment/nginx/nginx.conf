# deployment/nginx/nginx.conf
user nginx;
worker_processes auto; # Автоматическое определение количества рабочих процессов

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024; # Максимальное количество соединений на один рабочий процесс
}

# TCP/UDP проксирование
stream {
    upstream auth_servers {
        # least_conn; # Балансировка по наименьшему количеству соединений
        # K8s Service auth-server-service уже обеспечивает балансировку
        # Если Nginx вне K8s, здесь указываем IP/порты подов или NodePort
        server auth-server-service:8888; # Имя K8s сервиса для сервера аутентификации
    }

    server {
        listen 8888; # Nginx слушает этот TCP порт
        proxy_pass auth_servers;
        proxy_timeout 5s;
        proxy_connect_timeout 1s;
        # Базовая защита от DDoS: ограничение количества одновременных подключений с одного IP
        # limit_conn_zone $binary_remote_addr zone=auth_conn_limit_per_ip:10m;
        # limit_conn auth_conn_limit_per_ip 5; # Не более 5 одновременных подключений с одного IP
    }

    upstream game_servers {
        # least_conn; # Для UDP может быть не так эффективно, K8s Service лучше
        server game-server-service:9999; # Имя K8s сервиса для игрового сервера (UDP)
    }

    server {
        listen 9999 udp; # Nginx слушает этот UDP порт
        proxy_pass game_servers;
        # Для UDP proxy_timeout и proxy_connect_timeout могут работать иначе или не поддерживаться всеми версиями
        # Для UDP можно использовать proxy_responses, если нужно (редко)
    }

    # Зона для limit_conn (если используется)
    # limit_conn_zone $binary_remote_addr zone=auth_conn_limit_per_ip:10m;
    # limit_conn_zone $binary_remote_addr zone=game_conn_limit_per_ip:10m; # Для UDP может быть сложнее
}

# HTTP блок может понадобиться, если Nginx также обслуживает статику или API Gateways
# http {
#   include       /etc/nginx/mime.types;
#   default_type  application/octet-stream;
#   sendfile        on;
#   keepalive_timeout  65;

#   # Зона для limit_req (если используется для HTTP эндпоинтов)
#   # limit_req_zone $binary_remote_addr zone=http_req_limit_per_ip:10m rate=10r/s; # 10 запросов в секунду с IP

#   server {
#     listen 80;
#     server_name localhost;

#     location / {
#       # root   /usr/share/nginx/html;
#       # index  index.html index.htm;
#       # limit_req zone=http_req_limit_per_ip burst=20 nodelay; # Ограничение запросов
#     }
#   }
# }
